// Code generated by protoc-gen-go. DO NOT EDIT.
// source: marauder/proto/hypercard/whiteboard.proto

package hypercard_whiteboard

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Event struct {
	CreatedAt int64  `protobuf:"varint,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UserId    string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoomId    string `protobuf:"bytes,3,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	// Only one of the event_* must ever be set at once
	EventDrawing           *Drawing `protobuf:"bytes,4,opt,name=event_drawing,json=eventDrawing,proto3" json:"event_drawing,omitempty"`
	EventUserLeftTheRoom   bool     `protobuf:"varint,5,opt,name=event_user_left_the_room,json=eventUserLeftTheRoom,proto3" json:"event_user_left_the_room,omitempty"`
	EventUserJoinedTheRoom bool     `protobuf:"varint,6,opt,name=event_user_joined_the_room,json=eventUserJoinedTheRoom,proto3" json:"event_user_joined_the_room,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefb18137c8f4360, []int{0}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Event) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Event) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *Event) GetEventDrawing() *Drawing {
	if m != nil {
		return m.EventDrawing
	}
	return nil
}

func (m *Event) GetEventUserLeftTheRoom() bool {
	if m != nil {
		return m.EventUserLeftTheRoom
	}
	return false
}

func (m *Event) GetEventUserJoinedTheRoom() bool {
	if m != nil {
		return m.EventUserJoinedTheRoom
	}
	return false
}

type Drawing struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Drawing) Reset()         { *m = Drawing{} }
func (m *Drawing) String() string { return proto.CompactTextString(m) }
func (*Drawing) ProtoMessage()    {}
func (*Drawing) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefb18137c8f4360, []int{1}
}

func (m *Drawing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Drawing.Unmarshal(m, b)
}
func (m *Drawing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Drawing.Marshal(b, m, deterministic)
}
func (m *Drawing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Drawing.Merge(m, src)
}
func (m *Drawing) XXX_Size() int {
	return xxx_messageInfo_Drawing.Size(m)
}
func (m *Drawing) XXX_DiscardUnknown() {
	xxx_messageInfo_Drawing.DiscardUnknown(m)
}

var xxx_messageInfo_Drawing proto.InternalMessageInfo

type RecvEventsReq struct {
	RoomId               string   `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecvEventsReq) Reset()         { *m = RecvEventsReq{} }
func (m *RecvEventsReq) String() string { return proto.CompactTextString(m) }
func (*RecvEventsReq) ProtoMessage()    {}
func (*RecvEventsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefb18137c8f4360, []int{2}
}

func (m *RecvEventsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecvEventsReq.Unmarshal(m, b)
}
func (m *RecvEventsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecvEventsReq.Marshal(b, m, deterministic)
}
func (m *RecvEventsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecvEventsReq.Merge(m, src)
}
func (m *RecvEventsReq) XXX_Size() int {
	return xxx_messageInfo_RecvEventsReq.Size(m)
}
func (m *RecvEventsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RecvEventsReq.DiscardUnknown(m)
}

var xxx_messageInfo_RecvEventsReq proto.InternalMessageInfo

func (m *RecvEventsReq) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

type SendEventReq struct {
	Event                *Event   `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	RoomIds              []string `protobuf:"bytes,2,rep,name=room_ids,json=roomIds,proto3" json:"room_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendEventReq) Reset()         { *m = SendEventReq{} }
func (m *SendEventReq) String() string { return proto.CompactTextString(m) }
func (*SendEventReq) ProtoMessage()    {}
func (*SendEventReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefb18137c8f4360, []int{3}
}

func (m *SendEventReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendEventReq.Unmarshal(m, b)
}
func (m *SendEventReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendEventReq.Marshal(b, m, deterministic)
}
func (m *SendEventReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendEventReq.Merge(m, src)
}
func (m *SendEventReq) XXX_Size() int {
	return xxx_messageInfo_SendEventReq.Size(m)
}
func (m *SendEventReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SendEventReq.DiscardUnknown(m)
}

var xxx_messageInfo_SendEventReq proto.InternalMessageInfo

func (m *SendEventReq) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *SendEventReq) GetRoomIds() []string {
	if m != nil {
		return m.RoomIds
	}
	return nil
}

type SendEventRep struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendEventRep) Reset()         { *m = SendEventRep{} }
func (m *SendEventRep) String() string { return proto.CompactTextString(m) }
func (*SendEventRep) ProtoMessage()    {}
func (*SendEventRep) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefb18137c8f4360, []int{4}
}

func (m *SendEventRep) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendEventRep.Unmarshal(m, b)
}
func (m *SendEventRep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendEventRep.Marshal(b, m, deterministic)
}
func (m *SendEventRep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendEventRep.Merge(m, src)
}
func (m *SendEventRep) XXX_Size() int {
	return xxx_messageInfo_SendEventRep.Size(m)
}
func (m *SendEventRep) XXX_DiscardUnknown() {
	xxx_messageInfo_SendEventRep.DiscardUnknown(m)
}

var xxx_messageInfo_SendEventRep proto.InternalMessageInfo

type ListRoomsReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRoomsReq) Reset()         { *m = ListRoomsReq{} }
func (m *ListRoomsReq) String() string { return proto.CompactTextString(m) }
func (*ListRoomsReq) ProtoMessage()    {}
func (*ListRoomsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefb18137c8f4360, []int{5}
}

func (m *ListRoomsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRoomsReq.Unmarshal(m, b)
}
func (m *ListRoomsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRoomsReq.Marshal(b, m, deterministic)
}
func (m *ListRoomsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRoomsReq.Merge(m, src)
}
func (m *ListRoomsReq) XXX_Size() int {
	return xxx_messageInfo_ListRoomsReq.Size(m)
}
func (m *ListRoomsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRoomsReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListRoomsReq proto.InternalMessageInfo

type ListRoomsRep struct {
	Events               []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRoomsRep) Reset()         { *m = ListRoomsRep{} }
func (m *ListRoomsRep) String() string { return proto.CompactTextString(m) }
func (*ListRoomsRep) ProtoMessage()    {}
func (*ListRoomsRep) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefb18137c8f4360, []int{6}
}

func (m *ListRoomsRep) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRoomsRep.Unmarshal(m, b)
}
func (m *ListRoomsRep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRoomsRep.Marshal(b, m, deterministic)
}
func (m *ListRoomsRep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRoomsRep.Merge(m, src)
}
func (m *ListRoomsRep) XXX_Size() int {
	return xxx_messageInfo_ListRoomsRep.Size(m)
}
func (m *ListRoomsRep) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRoomsRep.DiscardUnknown(m)
}

var xxx_messageInfo_ListRoomsRep proto.InternalMessageInfo

func (m *ListRoomsRep) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

type RoomMember struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoomMember) Reset()         { *m = RoomMember{} }
func (m *RoomMember) String() string { return proto.CompactTextString(m) }
func (*RoomMember) ProtoMessage()    {}
func (*RoomMember) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefb18137c8f4360, []int{7}
}

func (m *RoomMember) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoomMember.Unmarshal(m, b)
}
func (m *RoomMember) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoomMember.Marshal(b, m, deterministic)
}
func (m *RoomMember) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoomMember.Merge(m, src)
}
func (m *RoomMember) XXX_Size() int {
	return xxx_messageInfo_RoomMember.Size(m)
}
func (m *RoomMember) XXX_DiscardUnknown() {
	xxx_messageInfo_RoomMember.DiscardUnknown(m)
}

var xxx_messageInfo_RoomMember proto.InternalMessageInfo

type ListRoomMembersReq struct {
	RoomId               string   `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRoomMembersReq) Reset()         { *m = ListRoomMembersReq{} }
func (m *ListRoomMembersReq) String() string { return proto.CompactTextString(m) }
func (*ListRoomMembersReq) ProtoMessage()    {}
func (*ListRoomMembersReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefb18137c8f4360, []int{8}
}

func (m *ListRoomMembersReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRoomMembersReq.Unmarshal(m, b)
}
func (m *ListRoomMembersReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRoomMembersReq.Marshal(b, m, deterministic)
}
func (m *ListRoomMembersReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRoomMembersReq.Merge(m, src)
}
func (m *ListRoomMembersReq) XXX_Size() int {
	return xxx_messageInfo_ListRoomMembersReq.Size(m)
}
func (m *ListRoomMembersReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRoomMembersReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListRoomMembersReq proto.InternalMessageInfo

func (m *ListRoomMembersReq) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

type ListRoomMembersRep struct {
	Members              []*RoomMember `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListRoomMembersRep) Reset()         { *m = ListRoomMembersRep{} }
func (m *ListRoomMembersRep) String() string { return proto.CompactTextString(m) }
func (*ListRoomMembersRep) ProtoMessage()    {}
func (*ListRoomMembersRep) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefb18137c8f4360, []int{9}
}

func (m *ListRoomMembersRep) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRoomMembersRep.Unmarshal(m, b)
}
func (m *ListRoomMembersRep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRoomMembersRep.Marshal(b, m, deterministic)
}
func (m *ListRoomMembersRep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRoomMembersRep.Merge(m, src)
}
func (m *ListRoomMembersRep) XXX_Size() int {
	return xxx_messageInfo_ListRoomMembersRep.Size(m)
}
func (m *ListRoomMembersRep) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRoomMembersRep.DiscardUnknown(m)
}

var xxx_messageInfo_ListRoomMembersRep proto.InternalMessageInfo

func (m *ListRoomMembersRep) GetMembers() []*RoomMember {
	if m != nil {
		return m.Members
	}
	return nil
}

func init() {
	proto.RegisterType((*Event)(nil), "hypercard.whiteboard.Event")
	proto.RegisterType((*Drawing)(nil), "hypercard.whiteboard.Drawing")
	proto.RegisterType((*RecvEventsReq)(nil), "hypercard.whiteboard.RecvEventsReq")
	proto.RegisterType((*SendEventReq)(nil), "hypercard.whiteboard.SendEventReq")
	proto.RegisterType((*SendEventRep)(nil), "hypercard.whiteboard.SendEventRep")
	proto.RegisterType((*ListRoomsReq)(nil), "hypercard.whiteboard.ListRoomsReq")
	proto.RegisterType((*ListRoomsRep)(nil), "hypercard.whiteboard.ListRoomsRep")
	proto.RegisterType((*RoomMember)(nil), "hypercard.whiteboard.RoomMember")
	proto.RegisterType((*ListRoomMembersReq)(nil), "hypercard.whiteboard.ListRoomMembersReq")
	proto.RegisterType((*ListRoomMembersRep)(nil), "hypercard.whiteboard.ListRoomMembersRep")
}

func init() {
	proto.RegisterFile("marauder/proto/hypercard/whiteboard.proto", fileDescriptor_eefb18137c8f4360)
}

var fileDescriptor_eefb18137c8f4360 = []byte{
	// 458 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0x4f, 0x6f, 0xd3, 0x40,
	0x10, 0xc5, 0xb3, 0x09, 0x49, 0xea, 0x69, 0x0a, 0xd2, 0xaa, 0x02, 0x63, 0x54, 0xc9, 0x5a, 0x2e,
	0xe6, 0x40, 0x02, 0xa9, 0xc4, 0xa1, 0x37, 0xfe, 0x1d, 0x8a, 0x8a, 0x84, 0x16, 0x2a, 0x2e, 0x48,
	0x96, 0x93, 0x9d, 0xd6, 0x46, 0xd8, 0x6b, 0xd6, 0xdb, 0x56, 0x7c, 0x0b, 0xbe, 0x2d, 0x57, 0xb4,
	0xbb, 0xae, 0xed, 0x22, 0x27, 0xe1, 0x38, 0x7e, 0xef, 0xfd, 0x66, 0x66, 0x47, 0x32, 0x3c, 0xcb,
	0x13, 0x95, 0x5c, 0x09, 0x54, 0x8b, 0x52, 0x49, 0x2d, 0x17, 0xe9, 0xaf, 0x12, 0xd5, 0x3a, 0x51,
	0x62, 0x71, 0x93, 0x66, 0x1a, 0x57, 0x32, 0x51, 0x62, 0x6e, 0x25, 0x7a, 0xd8, 0x68, 0xf3, 0x56,
	0x63, 0xbf, 0x87, 0x30, 0x7e, 0x7f, 0x8d, 0x85, 0xa6, 0x47, 0x00, 0x6b, 0x85, 0x89, 0x46, 0x11,
	0x27, 0xda, 0x27, 0x21, 0x89, 0x46, 0xdc, 0xab, 0xbf, 0xbc, 0xd6, 0xf4, 0x11, 0x4c, 0xaf, 0x2a,
	0x54, 0x71, 0x26, 0xfc, 0x61, 0x48, 0x22, 0x8f, 0x4f, 0x4c, 0x79, 0x2a, 0x8c, 0xa0, 0xa4, 0xcc,
	0x8d, 0x30, 0x72, 0x82, 0x29, 0x4f, 0x05, 0x7d, 0x03, 0x07, 0x68, 0xc8, 0xb1, 0x50, 0xc9, 0x4d,
	0x56, 0x5c, 0xfa, 0xf7, 0x42, 0x12, 0xed, 0x2f, 0x8f, 0xe6, 0x7d, 0x83, 0xcc, 0xdf, 0x39, 0x13,
	0x9f, 0xd9, 0x4c, 0x5d, 0xd1, 0x57, 0xe0, 0x3b, 0x86, 0xed, 0xfd, 0x03, 0x2f, 0x74, 0xac, 0x53,
	0x8c, 0x4d, 0x07, 0x7f, 0x1c, 0x92, 0x68, 0x8f, 0x1f, 0x5a, 0xfd, 0xbc, 0x42, 0x75, 0x86, 0x17,
	0xfa, 0x4b, 0x8a, 0x5c, 0xca, 0x9c, 0x9e, 0x40, 0xd0, 0xc9, 0x7d, 0x97, 0x59, 0x81, 0xa2, 0x4d,
	0x4e, 0x6c, 0xf2, 0x61, 0x93, 0xfc, 0x60, 0xf5, 0x3a, 0xcb, 0x3c, 0x98, 0xd6, 0xed, 0x59, 0x04,
	0x07, 0x1c, 0xd7, 0xd7, 0xf6, 0x81, 0x2a, 0x8e, 0x3f, 0xbb, 0xcb, 0x92, 0xee, 0xb2, 0xec, 0x1b,
	0xcc, 0x3e, 0x63, 0x21, 0xac, 0xd3, 0x18, 0x5f, 0xc2, 0xd8, 0xe2, 0xad, 0x6d, 0x7f, 0xf9, 0xa4,
	0x7f, 0x69, 0x67, 0x77, 0x4e, 0xfa, 0x18, 0xf6, 0x6a, 0x76, 0xe5, 0x0f, 0xc3, 0x51, 0xe4, 0xf1,
	0xa9, 0x83, 0x57, 0xec, 0xfe, 0x1d, 0x7a, 0x69, 0xea, 0xb3, 0xac, 0xd2, 0x66, 0x5c, 0x33, 0x16,
	0x7b, 0x7b, 0xa7, 0x2e, 0xe9, 0x31, 0x4c, 0x2c, 0xb3, 0xf2, 0x49, 0x38, 0xda, 0xd5, 0xbe, 0xb6,
	0xb2, 0x19, 0x80, 0x01, 0x7c, 0xc4, 0x7c, 0x85, 0x8a, 0x3d, 0x07, 0x7a, 0x8b, 0x74, 0x5f, 0xb6,
	0xef, 0xff, 0xa9, 0xc7, 0x5e, 0xd2, 0x13, 0x98, 0xe6, 0xae, 0xaa, 0x07, 0x09, 0xfb, 0x07, 0x69,
	0x63, 0xfc, 0x36, 0xb0, 0xfc, 0x33, 0x04, 0xf8, 0xda, 0x58, 0x28, 0x07, 0x68, 0x4f, 0x41, 0x9f,
	0x6e, 0xe0, 0x74, 0x8f, 0x15, 0x6c, 0xdb, 0x9a, 0x0d, 0x5e, 0x10, 0x7a, 0x0e, 0x5e, 0xf3, 0xac,
	0x94, 0xf5, 0xbb, 0xbb, 0x57, 0x0d, 0x76, 0x7b, 0x4a, 0x36, 0x30, 0xd8, 0xe6, 0x1a, 0x9b, 0xb0,
	0xdd, 0xf3, 0x05, 0xbb, 0x3d, 0x06, 0x7b, 0x09, 0x0f, 0xfe, 0x79, 0x62, 0x1a, 0x6d, 0x0f, 0xb6,
	0x87, 0x0b, 0xfe, 0xd7, 0x59, 0xb2, 0xc1, 0x6a, 0x62, 0x7f, 0x18, 0xc7, 0x7f, 0x03, 0x00, 0x00,
	0xff, 0xff, 0x9e, 0x58, 0x3a, 0xf3, 0x5d, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WhiteboardClient is the client API for Whiteboard service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WhiteboardClient interface {
	// RecvEvents listens to new events from others for a given room.
	// Events are sent using the SendEvent call.
	// A user never receives their own events.
	// When stream is closed, other users of the room should receive a disconnection event.
	RecvEvents(ctx context.Context, in *RecvEventsReq, opts ...grpc.CallOption) (Whiteboard_RecvEventsClient, error)
	// SendEvent publishes a user's event, which then gets routed to zero or more rooms.
	SendEvent(ctx context.Context, in *SendEventReq, opts ...grpc.CallOption) (*SendEventRep, error)
	// ListRooms returns a paginated list of rooms.
	ListRooms(ctx context.Context, in *ListRoomsReq, opts ...grpc.CallOption) (*ListRoomsRep, error)
	// ListRoomMembers returns a paginated list of room members.
	ListRoomMembers(ctx context.Context, in *ListRoomMembersReq, opts ...grpc.CallOption) (*ListRoomMembersRep, error)
}

type whiteboardClient struct {
	cc *grpc.ClientConn
}

func NewWhiteboardClient(cc *grpc.ClientConn) WhiteboardClient {
	return &whiteboardClient{cc}
}

func (c *whiteboardClient) RecvEvents(ctx context.Context, in *RecvEventsReq, opts ...grpc.CallOption) (Whiteboard_RecvEventsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Whiteboard_serviceDesc.Streams[0], "/hypercard.whiteboard.Whiteboard/RecvEvents", opts...)
	if err != nil {
		return nil, err
	}
	x := &whiteboardRecvEventsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Whiteboard_RecvEventsClient interface {
	Recv() (*Event, error)
	grpc.ClientStream
}

type whiteboardRecvEventsClient struct {
	grpc.ClientStream
}

func (x *whiteboardRecvEventsClient) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *whiteboardClient) SendEvent(ctx context.Context, in *SendEventReq, opts ...grpc.CallOption) (*SendEventRep, error) {
	out := new(SendEventRep)
	err := c.cc.Invoke(ctx, "/hypercard.whiteboard.Whiteboard/SendEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whiteboardClient) ListRooms(ctx context.Context, in *ListRoomsReq, opts ...grpc.CallOption) (*ListRoomsRep, error) {
	out := new(ListRoomsRep)
	err := c.cc.Invoke(ctx, "/hypercard.whiteboard.Whiteboard/ListRooms", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whiteboardClient) ListRoomMembers(ctx context.Context, in *ListRoomMembersReq, opts ...grpc.CallOption) (*ListRoomMembersRep, error) {
	out := new(ListRoomMembersRep)
	err := c.cc.Invoke(ctx, "/hypercard.whiteboard.Whiteboard/ListRoomMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WhiteboardServer is the server API for Whiteboard service.
type WhiteboardServer interface {
	// RecvEvents listens to new events from others for a given room.
	// Events are sent using the SendEvent call.
	// A user never receives their own events.
	// When stream is closed, other users of the room should receive a disconnection event.
	RecvEvents(*RecvEventsReq, Whiteboard_RecvEventsServer) error
	// SendEvent publishes a user's event, which then gets routed to zero or more rooms.
	SendEvent(context.Context, *SendEventReq) (*SendEventRep, error)
	// ListRooms returns a paginated list of rooms.
	ListRooms(context.Context, *ListRoomsReq) (*ListRoomsRep, error)
	// ListRoomMembers returns a paginated list of room members.
	ListRoomMembers(context.Context, *ListRoomMembersReq) (*ListRoomMembersRep, error)
}

func RegisterWhiteboardServer(s *grpc.Server, srv WhiteboardServer) {
	s.RegisterService(&_Whiteboard_serviceDesc, srv)
}

func _Whiteboard_RecvEvents_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RecvEventsReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WhiteboardServer).RecvEvents(m, &whiteboardRecvEventsServer{stream})
}

type Whiteboard_RecvEventsServer interface {
	Send(*Event) error
	grpc.ServerStream
}

type whiteboardRecvEventsServer struct {
	grpc.ServerStream
}

func (x *whiteboardRecvEventsServer) Send(m *Event) error {
	return x.ServerStream.SendMsg(m)
}

func _Whiteboard_SendEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendEventReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhiteboardServer).SendEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hypercard.whiteboard.Whiteboard/SendEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhiteboardServer).SendEvent(ctx, req.(*SendEventReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whiteboard_ListRooms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRoomsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhiteboardServer).ListRooms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hypercard.whiteboard.Whiteboard/ListRooms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhiteboardServer).ListRooms(ctx, req.(*ListRoomsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Whiteboard_ListRoomMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRoomMembersReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhiteboardServer).ListRoomMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hypercard.whiteboard.Whiteboard/ListRoomMembers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhiteboardServer).ListRoomMembers(ctx, req.(*ListRoomMembersReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Whiteboard_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hypercard.whiteboard.Whiteboard",
	HandlerType: (*WhiteboardServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendEvent",
			Handler:    _Whiteboard_SendEvent_Handler,
		},
		{
			MethodName: "ListRooms",
			Handler:    _Whiteboard_ListRooms_Handler,
		},
		{
			MethodName: "ListRoomMembers",
			Handler:    _Whiteboard_ListRoomMembers_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RecvEvents",
			Handler:       _Whiteboard_RecvEvents_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "marauder/proto/hypercard/whiteboard.proto",
}
